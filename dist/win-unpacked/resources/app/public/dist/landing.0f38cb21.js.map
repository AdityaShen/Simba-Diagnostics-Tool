{"mappings":"ACAA,SAAS,kBACL,IAAM,EAAS,SAAS,cAAc,CAAC,eACvC,GAAI,CAAC,EAAQ,OAEb,IAAM,EAAa,AAAC,IAChB,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAQ,AAAU,SAAV,GACvC,SAAS,IAAI,CAAC,YAAY,CAAC,aAAc,GACzC,EAAO,YAAY,CAAC,eAAgB,AAAU,SAAV,EACxC,EAGA,EADmB,aAAa,OAAO,CAAC,UAAY,QAGpD,EAAO,gBAAgB,CAAC,QAAS,KAC7B,IAAM,EAAW,SAAS,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAU,QAAU,OACtE,aAAa,OAAO,CAAC,QAAS,GAC9B,EAAW,EACf,EACJ,CAEA,eAAe,cACX,IAAM,EAAO,SAAS,cAAc,CAAC,cACrC,GAAI,CACA,IAAM,EAAM,MAAM,MAAM,iBAClB,EAAO,MAAM,EAAI,IAAI,GAC3B,GAAI,CAAC,EAAK,OAAO,CAAE,MAAM,AAAI,MAAM,EAAK,OAAO,EAE/C,IAAM,EAAU,EAAK,OAAO,AAC5B,CAAA,EAAK,SAAS,CAAG,GAGjB,EAAQ,OAAO,CAAC,AAAC,IACb,IAAM,EAAO,SAAS,aAAa,CAAC,MACpC,CAAA,EAAK,SAAS,CAAG,cACjB,EAAK,SAAS,CAAG;AACjB,YAAA,EAAE,EAAO,IAAI,EAAI,iBAAiB;AACX,mCAAA,EAAE,EAAO,KAAK,CAAC;AACf,mCAAA,EAAE,EAAO,KAAK,CAAC;AACb,qCAAA,EAAE,EAAO,cAAc,CAAC;AACrB,wCAAA,EAAE,EAAO,UAAU,CAAC;AACvB,qCAAA,EAAE,EAAO,OAAO,EAAI,UAAU;AAChC,mCAAA,EAAE,EAAO,IAAI,CAAC;A;AAEuD,wGAAA,EAAE,EAAO,EAAE,CAAC;A;AAE9G,MAAA,CAAC,CACK,EAAK,WAAW,CAAC,EACrB,EACJ,CAAE,MAAO,EAAK,CACV,EAAK,SAAS,CAAG,CAAC,8CAA8C,EAAE,EAAI,OAAO,CAAC,IAAI,CAAC,AACvF,CACJ,CAEA,SAAS,gBAAgB,CAAC,mBAAoB,KAC1C,kBACA,aACJ","sources":["<anon>","public/landing.js"],"sourcesContent":["function initThemeToggle() {\n    const toggle = document.getElementById(\"themeToggle\");\n    if (!toggle) return;\n    const applyTheme = (theme)=>{\n        document.body.classList.toggle(\"dark\", theme === \"dark\");\n        document.body.setAttribute(\"data-theme\", theme);\n        toggle.setAttribute(\"aria-checked\", theme === \"dark\");\n    };\n    const savedTheme = localStorage.getItem(\"theme\") || \"dark\";\n    applyTheme(savedTheme);\n    toggle.addEventListener(\"click\", ()=>{\n        const newTheme = document.body.classList.contains(\"dark\") ? \"light\" : \"dark\";\n        localStorage.setItem(\"theme\", newTheme);\n        applyTheme(newTheme);\n    });\n}\nasync function loadDevices() {\n    const grid = document.getElementById(\"deviceGrid\");\n    try {\n        const res = await fetch(\"/list-devices\");\n        const data = await res.json();\n        if (!data.success) throw new Error(data.message);\n        const devices = data.devices;\n        grid.innerHTML = \"\";\n        // Only show as many slots as there are connected devices\n        devices.forEach((device)=>{\n            const card = document.createElement(\"div\");\n            card.className = \"device-card\";\n            card.innerHTML = `\n        <h3>${device.name || \"Unknown Device\"}</h3>\n        <p><strong>Model:</strong> ${device.model}</p>\n        <p><strong>Brand:</strong> ${device.brand}</p>\n        <p><strong>Android:</strong> ${device.androidVersion}</p>\n        <p><strong>Resolution:</strong> ${device.resolution}</p>\n        <p><strong>Battery:</strong> ${device.battery || \"Unknown\"}</p>\n        <p><strong>Wi-Fi:</strong> ${device.wifi}</p>\n        <div class=\"buttons\" style=\"margin-top: 0.5rem;\">\n          <button class=\"neon-button\" style=\"color: white;\" onclick=\"location.href='index.html?deviceId=${device.id}'\">Open</button>\n        </div>\n      `;\n            grid.appendChild(card);\n        });\n    } catch (err) {\n        grid.innerHTML = `<p style=\"color:red;\">Failed to load devices: ${err.message}</p>`;\n    }\n}\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    initThemeToggle();\n    loadDevices();\n});\n\n//# sourceMappingURL=landing.0f38cb21.js.map\n","function initThemeToggle() {\n    const toggle = document.getElementById(\"themeToggle\");\n    if (!toggle) return;\n\n    const applyTheme = (theme) => {\n        document.body.classList.toggle(\"dark\", theme === \"dark\");\n        document.body.setAttribute(\"data-theme\", theme);\n        toggle.setAttribute(\"aria-checked\", theme === \"dark\");\n    };\n\n    const savedTheme = localStorage.getItem(\"theme\") || \"dark\";\n    applyTheme(savedTheme);\n\n    toggle.addEventListener(\"click\", () => {\n        const newTheme = document.body.classList.contains(\"dark\") ? \"light\" : \"dark\";\n        localStorage.setItem(\"theme\", newTheme);\n        applyTheme(newTheme);\n    });\n}\n\nasync function loadDevices() {\n    const grid = document.getElementById(\"deviceGrid\");\n    try {\n        const res = await fetch(\"/list-devices\");\n        const data = await res.json();\n        if (!data.success) throw new Error(data.message);\n\n        const devices = data.devices;\n        grid.innerHTML = \"\";\n\n        // Only show as many slots as there are connected devices\n        devices.forEach((device) => {\n            const card = document.createElement(\"div\");\n            card.className = \"device-card\";\n            card.innerHTML = `\n        <h3>${device.name || \"Unknown Device\"}</h3>\n        <p><strong>Model:</strong> ${device.model}</p>\n        <p><strong>Brand:</strong> ${device.brand}</p>\n        <p><strong>Android:</strong> ${device.androidVersion}</p>\n        <p><strong>Resolution:</strong> ${device.resolution}</p>\n        <p><strong>Battery:</strong> ${device.battery || \"Unknown\"}</p>\n        <p><strong>Wi-Fi:</strong> ${device.wifi}</p>\n        <div class=\"buttons\" style=\"margin-top: 0.5rem;\">\n          <button class=\"neon-button\" style=\"color: white;\" onclick=\"location.href='index.html?deviceId=${device.id}'\">Open</button>\n        </div>\n      `;\n            grid.appendChild(card);\n        });\n    } catch (err) {\n        grid.innerHTML = `<p style=\"color:red;\">Failed to load devices: ${err.message}</p>`;\n    }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    initThemeToggle();\n    loadDevices();\n});\n"],"names":["initThemeToggle","toggle","document","getElementById","applyTheme","theme","body","classList","setAttribute","localStorage","getItem","addEventListener","newTheme","contains","setItem","loadDevices","grid","res","fetch","data","json","success","Error","message","devices","innerHTML","forEach","device","card","createElement","className","name","model","brand","androidVersion","resolution","battery","wifi","id","appendChild","err"],"version":3,"file":"landing.0f38cb21.js.map"}